# home assistant configuration for energy monitoring
# add these to your configuration.yaml

# rest api sensors for energy data
sensor:
  # template sensors for calculated values
  - platform: template
    sensors:
      energy_efficiency_score:
        friendly_name: "Energy Efficiency Score"
        unit_of_measurement: "%"
        value_template: >
          {% set electric_usage = states('sensor.electric_usage_total') | float(0) %}
          {% set hvac_runtime = state_attr('sensor.hvac_efficiency', 'compCool1_runtime_pct') | float(0) +
                               state_attr('sensor.hvac_efficiency', 'compHeat1_runtime_pct') | float(0) %}
          {% if hvac_runtime > 0 %}
            {{ ((100 - hvac_runtime) * 0.7 + (100 - (electric_usage / 100)) * 0.3) | round(1) }}
          {% else %}
            100
          {% endif %}
        
      daily_energy_cost:
        friendly_name: "Estimated Daily Energy Cost"
        unit_of_measurement: "$"
        value_template: >
          {% set electric = states('sensor.electric_usage_total') | float(0) %}
          {% set gas = states('sensor.gas_usage_total') | float(0) %}
          {% set water = states('sensor.water_usage_total') | float(0) %}
          {{ ((electric * 0.12) + (gas * 0.95) + (water * 0.004)) | round(2) }}

# input numbers for setpoint adjustments
input_number:
  target_cooling_setpoint:
    name: "Target Cooling Setpoint"
    min: 70
    max: 82
    step: 1
    unit_of_measurement: "°F"
    initial: 75
    
  target_heating_setpoint:
    name: "Target Heating Setpoint"
    min: 65
    max: 75
    step: 1
    unit_of_measurement: "°F"
    initial: 68

# automations for energy optimization
automation:
  # peak hour notification
  - id: energy_peak_hour_alert
    alias: "Energy Peak Hour Alert"
    trigger:
      - platform: time
        at: "14:00:00"  # 2 pm - start of peak hours
    condition:
      - condition: template
        value_template: >
          {{ states('sensor.electric_usage_total') | float > 
             (state_attr('sensor.electric_usage_total', 'average_usage') | float * 1.2) }}
    action:
      - service: notify.mobile_app_your_phone
        data:
          title: "Peak Hour Energy Alert"
          message: >
            High energy usage detected. Consider delaying high-energy activities until after 6 PM.
            Current usage: {{ states('sensor.electric_usage_total') }}kWh
          
  # hvac efficiency alert
  - id: hvac_efficiency_alert
    alias: "HVAC Efficiency Alert"
    trigger:
      - platform: numeric_state
        entity_id: sensor.hvac_efficiency
        attribute: compCool1_runtime_pct
        above: 60
        for:
          hours: 2
    action:
      - service: notify.mobile_app_your_phone
        data:
          title: "HVAC Efficiency Alert"
          message: >
            AC has been running over 60% for 2 hours. Consider:
            • Raising cooling setpoint by 1-2°F
            • Checking air filters
            • Closing blinds/curtains
          
  # weekly energy report
  - id: weekly_energy_report
    alias: "Weekly Energy Report"
    trigger:
      - platform: time
        at: "08:00:00"
      - platform: time_pattern
        weekday: 1  # monday
    action:
      - service: python_script.run_energy_analysis
      - delay: "00:02:00"  # wait for analysis to complete
      - service: notify.mobile_app_your_phone
        data:
          title: "Weekly Energy Report"
          message: >
            Energy analysis complete! Check your dashboard for insights and recommendations.
            Efficiency Score: {{ states('sensor.energy_efficiency_score') }}%

# scripts for energy optimization
script:
  optimize_cooling:
    alias: "Optimize Cooling"
    sequence:
      - service: climate.set_temperature
        target:
          entity_id: climate.thermostat
        data:
          temperature: "{{ states('input_number.target_cooling_setpoint') | float + 1 }}"
      - service: notify.mobile_app_your_phone
        data:
          title: "Cooling Optimized"
          message: "Cooling setpoint raised by 1°F to improve efficiency"
          
  optimize_heating:
    alias: "Optimize Heating"
    sequence:
      - service: climate.set_temperature
        target:
          entity_id: climate.thermostat
        data:
          temperature: "{{ states('input_number.target_heating_setpoint') | float - 1 }}"
      - service: notify.mobile_app_your_phone
        data:
          title: "Heating Optimized"
          message: "Heating setpoint lowered by 1°F to improve efficiency"

# dashboard configuration (add to ui-lovelace.yaml or via ui)
# this creates a comprehensive energy monitoring dashboard
views:
  - title: Energy Monitor
    path: energy
    icon: mdi:flash
    cards:
      # summary cards
      - type: horizontal-stack
        cards:
          - type: entity
            entity: sensor.electric_usage_total
            name: "Electric Usage"
            icon: mdi:flash
          - type: entity
            entity: sensor.gas_usage_total
            name: "Gas Usage"
            icon: mdi:fire
          - type: entity
            entity: sensor.water_usage_total
            name: "Water Usage"
            icon: mdi:water
      
      # efficiency score
      - type: gauge
        entity: sensor.energy_efficiency_score
        name: "Energy Efficiency Score"
        min: 0
        max: 100
        severity:
          green: 80
          yellow: 60
          red: 0
        
      # cost tracking
      - type: entity
        entity: sensor.daily_energy_cost
        name: "Estimated Daily Cost"
        icon: mdi:currency-usd
        
      # hvac monitoring
      - type: entities
        title: "HVAC Performance"
        entities:
          - sensor.hvac_efficiency
          - input_number.target_cooling_setpoint
          - input_number.target_heating_setpoint
        
      # historical chart
      - type: history-graph
        title: "Usage History"
        hours_to_show: 168  # 7 days
        entities:
          - sensor.electric_usage_total
          - sensor.gas_usage_total
        
      # optimization controls
      - type: horizontal-stack
        cards:
          - type: button
            name: "Optimize Cooling"
            tap_action:
              action: call-service
              service: script.optimize_cooling
            icon: mdi:snowflake
          - type: button
            name: "Optimize Heating"
            tap_action:
              action: call-service
              service: script.optimize_heating
            icon: mdi:fire